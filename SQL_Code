#CODEBASICS_SQL_PROJECT_RESUME_CHALLENGE_4

#TASK 1

SELECT
    DISTINCT market FROM  dim_customer
WHERE region = 'APAC' AND customer = "Atliq Exclusive";

#TASK 2

WITH unique_products AS (
    SELECT 
        fiscal_year, 
        COUNT(DISTINCT Product_code) as unique_products 
    FROM 
        fact_gross_price 
    GROUP BY 
        fiscal_year
)
SELECT 
    up_2020.unique_products as unique_products_2020,
    up_2021.unique_products as unique_products_2021,
    concat(round((up_2021.unique_products - up_2020.unique_products)/up_2020.unique_products * 100,2), " %") as percentage_change
FROM 
    unique_products up_2020
CROSS JOIN 
    unique_products up_2021
WHERE 
    up_2020.fiscal_year = 2020 
    AND up_2021.fiscal_year = 2021;

#TASK 3

SELECT segment, count(DISTINCT product_code) AS product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;

#TASK 4

WITH product_count AS ( 
SELECT p.segment,s.fiscal_year, COUNT(DISTINCT p.product_code) AS product_count
FROM dim_product p JOIN fact_sales_monthly s
ON p.product_code= s.product_code
GROUP BY p.segment , s.fiscal_year )
SELECT pc_2020.segment,
    pc_2020.product_count AS product_count_2020,
    pc_2021.product_count AS product_count_2021, pc_2021.product_count-pc_2020.product_count AS difference
FROM product_count pc_2020
JOIN product_count pc_2021
 ON pc_2020.segment = pc_2021.segment
    AND pc_2020.fiscal_year = 2020 
    AND pc_2021.fiscal_year = 2021
ORDER BY 
    difference DESC   

#TASK 5

SELECT p.product_code,concat(product," (",variant,")") AS product,m.manufacturing_cost
FROM fact_manufacturing_cost m
JOIN dim_product p
ON m.product_code=p.product_code 
WHERE manufacturing_cost IN(
(SELECT min(manufacturing_cost) FROM fact_manufacturing_cost),
(SELECT max(manufacturing_cost) FROM fact_manufacturing_cost))
ORDER BY manufacturing_cost DESC


#TASK 6

WITH cte1 AS (SELECT c.customer,c.customer_code,
ROUND(AVG(pi.pre_invoice_discount_pct)*100,2)as average_discount_percentage
 FROM fact_pre_invoice_deductions pi
 JOIN dim_customer c
 ON pi.customer_code=c.customer_code
 WHERE market="india" AND pi.fiscal_year=2021
 GROUP BY customer_code,c.customer
 ORDER BY average_discount_percentage DESC 
 LIMIT 5)
 SELECT customer, customer_code,
 concat(average_discount_percentage, " %") AS average_discount_pct
 FROM cte1

#TASK 7

WITH temp_table AS (
    SELECT customer,
    CONCAT(MONTHNAME(s.date), ' (', YEAR(s.date), ')') AS months , s.fiscal_year,
    month(date) AS month_number, 
    year(date) AS year,
    (sold_quantity * gross_price)  AS gross_sales      
 FROM fact_sales_monthly s JOIN
 fact_gross_price g ON s.product_code = g.product_code
 JOIN dim_customer c ON s.customer_code=c.customer_code
 WHERE customer="Atliq exclusive"
 )
 SELECT months,fiscal_year,concat(round(sum(gross_sales)/1000000,2), " M") AS gross_sales FROM temp_table
GROUP BY year,months,month_number,fiscal_year
ORDER BY year,month_number;


#TASK 8

with cte1 as (
select 
month(date) as m, 
sum(sold_quantity) as total_sold_quantity
from fact_sales_monthly
where fiscal_year=2020
group by m
)
select 
case 
    when m in (9,10,11) then  "Q1"
    when m in (12,1,2) then "Q2"
    when m in (3,4,5) then  "Q3"
    ELSE  "Q4"
    end as Quarter,
    concat(round(sum(total_sold_quantity)/1000000,2), " M") as total_sold_quantity
    from cte1
    group by Quarter
    order by total_sold_quantity desc;

#TASK 9

WITH temp_table AS (
      SELECT c.channel,sum(s.sold_quantity * g.gross_price) AS total_sales
  FROM
  fact_sales_monthly s 
  JOIN fact_gross_price g ON s.product_code = g.product_code
  JOIN dim_customer c ON s.customer_code = c.customer_code
  WHERE s.fiscal_year= 2021
  GROUP BY c.channel
  ORDER BY total_sales DESC
)
SELECT 
  channel,
 concat( round(total_sales/1000000,2), " M") AS gross_sales_in_millions,
 concat(round(total_sales/(sum(total_sales) OVER())*100,2), " %") AS percentage 
FROM temp_table ;

#TASK 10

WITH temp_table AS (
    select p.division, s.product_code, concat(p.product,"(",p.variant,")") AS product ,
    sum(sold_quantity) AS total_sold_quantity,
    rank() OVER (partition by division order by sum(sold_quantity) desc) AS rank_order
 FROM
 fact_sales_monthly s
 JOIN dim_product p
 ON s.product_code = p.product_code
 WHERE fiscal_year = 2021
 GROUP BY product_code,p.division,p.product,p.variant
)
SELECT * FROM temp_table
WHERE rank_order <=3;
